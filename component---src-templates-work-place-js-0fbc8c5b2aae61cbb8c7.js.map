{"version":3,"sources":["webpack:///./src/components/typography/Copy.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/typography/Caption.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/components/typography/SmallHeadline.js","webpack:///./src/templates/WorkPlace.js"],"names":["Copy","styled","p","props","theme","color","darkText","weight","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","Caption","gray2","url","this","SmallHeadline","h6","gray3","media","large","Wrapper","div","Date","LinkWrapper","button","gray4","WorkPlaceQuery","React","memo","data","markdownRemark","frontmatter","html","dateFrom","dateTo","title","isToday","Layout","headline","HelmetMeta","description","dangerouslySetInnerHTML","__html","ExternalTextLink","href","link"],"mappings":"2FAEA,IAEMA,EAFN,UAEaC,EAAOC,EAAV,0DAAGD,EACX,SAAAE,GAAK,qBACIA,EAAMC,MAAMD,EAAME,QAAUF,EAAMC,MAAME,UAD5C,0CAGUH,EAAMI,QAAU,KAH1B,8BAQQP,O,qBCbf,IAAIQ,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOR,EAAQG,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQT,EAAM,UAAY,KACtFQ,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKZ,GACfJ,EAAQA,EAAQkB,EAAIlB,EAAQmB,EAAIlB,GAAM,WACpC,IAAImB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,kCCfhB,4BAGMO,EAAU/B,YAAOD,KAAV,6DAAGC,CAAH,gDACF,SAAAE,GAAK,OAAIA,EAAMC,MAAM6B,SAKjBD,O,kCCTf,EAAQ,OAAR,CAA0B,QAAQ,SAAUpB,GAC1C,OAAO,SAAcsB,GACnB,OAAOtB,EAAWuB,KAAM,IAAK,OAAQD,Q,mMCa1BE,EAZOnC,IAAOoC,GAAV,gEAAGpC,EACpB,SAAAE,GAAK,oBACIA,EAAMC,MAAMkC,MADhB,uDAKHC,IAAMC,MALH,qC,YCMDC,EAAUxC,IAAOyC,IAAV,yEAAGzC,CAAH,4HAiBP0C,EAAO1C,YAAO+B,KAAV,sEAAG/B,CAAH,qBAIJ2C,EAAc3C,IAAOyC,IAAV,6EAAGzC,EAClB,SAACE,GAAD,+BACoBA,EAAMC,MAAMyC,OADhC,6dAyBW1C,EAAMC,MAAMyC,OAzBvB,4BA0BsB1C,EAAMC,MAAM0C,MA1BlC,cAkEK,IAAMC,EAAc,aAgBZC,cAAMC,MApCrB,SAAmB9C,GAA2B,IAAD,EACbA,EAAM+C,KAAKC,eAAjCC,EADmC,EACnCA,YAAaC,EADsB,EACtBA,KACbC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,OAAQC,EAAUJ,EAAVI,MACpBC,EAAmBH,IAAaC,EAEtC,OACE,kBAACG,EAAA,EAAD,CAAQC,SAAUH,GAChB,kBAACI,EAAA,EAAD,MACA,kBAAC,EAAD,KAAgBR,EAAYS,aAC5B,kBAAC,EAAD,KACGP,EADH,OACiBG,EAAU,UAAYF,GAEvC,kBAACd,EAAD,CAASqB,wBAAyB,CAAEC,OAAQV,KAC5C,kBAACT,EAAD,KACE,kBAACoB,EAAA,EAAD,CAAkBC,KAAMb,EAAYc,MAAOV","file":"component---src-templates-work-place-js-0fbc8c5b2aae61cbb8c7.js","sourcesContent":["// @flow\n\nimport styled from 'styled-components';\n\nconst Copy = styled.p(\n  props => `\n  color: ${props.theme[props.color] || props.theme.darkText};\n  font-size: 18px;\n  font-weight: ${props.weight || 400};\n  line-height: 1.5;\n`\n);\n\nexport default Copy;\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","// @flow\n\nimport styled from 'styled-components';\nimport Copy from './Copy';\n\nconst Caption = styled(Copy)`\n  color: ${props => props.theme.gray2};\n  font-size: 12px;\n  padding-top: 11px;\n`;\n\nexport default Caption;","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","// @flow\n\nimport styled from 'styled-components';\nimport media from '../../utils/media';\n\nconst SmallHeadline = styled.h6(\n  props => `\n  color: ${props.theme.gray3};\n  font-size: 18px;\n  padding-bottom: 10px;\n\n  ${media.large} {\n    font-size: 24px;\n  }\n`\n);\n\nexport default SmallHeadline;","// @flow\n\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport ExternalTextLink from '../components/actions/ExternalTextLink';\nimport HelmetMeta from '../components/layout/HelmetMeta';\nimport Layout from '../components/layout/Layout';\nimport Headline from '../components/typography/Headline';\nimport SmallHeadline from '../components/typography/SmallHeadline';\nimport Caption from '../components/typography/Caption';\n\nconst Wrapper = styled.div`\n  padding-bottom: 24px;\n  padding-top: 24px;\n\n  h1,h2,h3,h4,h5,h6 {\n    padding-bottom: 12px;\n  }\n\n  h2 {\n    font-size: 24px;\n  }\n\n  p {\n    padding-bottom: 24px;\n  }\n`;\n\nconst Date = styled(Caption)`\n  font-size: 16px;\n`;\n\nconst LinkWrapper = styled.div(\n  (props) => `\n  background-color: ${props.theme.button};\n  border-radius: 30px;\n  cursor: pointer;\n  display: inline-block;\n  font-weight: 600;\n  padding-bottom: 10.5px;\n  padding-left: 21px;\n  padding-right: 21px;\n  padding-top: 10.5px;\n  transition: background-color 250ms ease-out, color 250ms ease-out;\n  text-align: center;\n  width: 100%;\n\n  .external-link {\n    display: block;\n    text-align: center;\n    width: 100%;\n  }\n\n  .external-row {\n    justify-content: center;\n  }\n\n  &:hover {\n    color: ${props.theme.button};\n    background-color: ${props.theme.gray4};\n  }\n`\n);\n\ntype Props = {\n  data: {\n    markdownRemark: {\n      html: string,\n      frontmatter: {\n        dateTo: string,\n        dateFrom: string,\n        description: string,\n        link: string,\n        title: string\n      }\n    }\n  }\n};\n\nfunction WorkPlace(props: Props): React$Node {\n  const { frontmatter, html } = props.data.markdownRemark;\n  const { dateFrom, dateTo, title } = frontmatter;\n  const isToday: boolean = dateFrom === dateTo;\n\n  return (\n    <Layout headline={title}>\n      <HelmetMeta />\n      <SmallHeadline>{frontmatter.description}</SmallHeadline>\n      <Date>\n        {dateFrom} to {isToday ? 'Present' : dateTo}\n      </Date>\n      <Wrapper dangerouslySetInnerHTML={{ __html: html }} />\n      <LinkWrapper>\n        <ExternalTextLink href={frontmatter.link}>{title}</ExternalTextLink>\n      </LinkWrapper>\n    </Layout>\n  );\n}\n\nexport const WorkPlaceQuery = graphql`\n         query($path: String!) {\n           markdownRemark(frontmatter: { path: { eq: $path } }) {\n             html\n             frontmatter {\n               dateFrom(formatString: \"MMMM DD, YYYY\")\n               dateTo(formatString: \"MMMM DD, YYYY\")\n               description\n               link\n               path\n               title\n             }\n           }\n         }\n       `;\n\nexport default React.memo(WorkPlace);\n"],"sourceRoot":""}