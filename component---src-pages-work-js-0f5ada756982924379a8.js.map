{"version":3,"sources":["webpack:///./src/components/icons/LinkArrow.js","webpack:///./src/pages/work.js"],"names":["LinkArrow","props","theme","width","height","viewBox","fill","xmlns","d","color","defaultProps","React","memo","HistoryList","styled","ul","media","medium","Wrapper","div","shadow","Header","darkText","Letter","p","gray5","Footer","white","LinkTitle","h6","Description","gray3","WorkQuery","edges","data","allMarkdownRemark","navItems","useMemo","map","item","frontmatter","node","letter","title","substring","key","id","className","to","path","Row","justify","description","Layout","headline","HelmetMeta"],"mappings":"iOASA,SAASA,EAAUC,GACjB,OACE,kBAAC,IAAD,MACG,SAAAC,GAAK,OACJ,yBACEC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEC,EAAE,6DACFF,KAAMJ,EAAMD,EAAMQ,aAQ9BT,EAAUU,aAAe,CACvBD,MAAO,YAGME,UAAMC,KAAKZ,G,YCpBpBa,EAAcC,IAAOC,GAAV,wEAAGD,CAAH,mOAFc,OAmB3BE,IAAMC,OAnBqB,QA4BzBC,EAAUJ,IAAOK,IAAV,oEAAGL,CAAH,0IA7BoB,QA+BjB,SAAAb,GAAK,OAAIA,EAAMC,MAAMkB,UAU/BC,EAASP,IAAOK,IAAV,mEAAGL,CAAH,iHACU,SAAAb,GAAK,OAAIA,EAAMC,MAAMoB,WA1CV,eAiD3BC,EAAST,IAAOU,EAAV,mEAAGV,CAAH,6GACD,SAAAb,GAAK,OAAIA,EAAMC,MAAMuB,SAS1BC,EAASZ,IAAOK,IAAV,mEAAGL,CAAH,kKACU,SAAAb,GAAK,OAAIA,EAAMC,MAAMyB,QA5DV,eAqE3BC,EAAYd,IAAOe,GAAV,sEAAGf,CAAH,yDAMTgB,EAAchB,IAAOU,EAAV,wEAAGV,CAAH,+BACN,SAAAb,GAAK,OAAIA,EAAMC,MAAM6B,SA2DzB,IAAMC,EAAS,aAoBPrB,cAAMC,MAxDrB,SAAcX,GAA2B,IAC/BgC,EAAUhC,EAAMiC,KAAKC,kBAArBF,MACFG,EAA8BzB,IAAM0B,SAAQ,WAChD,OAAOJ,EAAMK,KAAI,SAAAC,GAAS,IAChBC,EAAgBD,EAAKE,KAArBD,YACFE,EAAiBF,EAAYG,MAAMC,UAAU,EAAG,GAEtD,OACE,wBAAIC,IAAKN,EAAKE,KAAKK,IACjB,kBAAC,OAAD,CAAMC,UAAU,YAAYC,GAAIR,EAAYS,MAC1C,kBAAC/B,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,KAASmB,IAEX,kBAAChB,EAAD,KACE,kBAACE,EAAD,KAAYY,EAAYG,OACxB,kBAACO,EAAA,EAAD,CAAKC,QAAQ,iBACX,kBAACrB,EAAD,KAAcU,EAAYY,aAC1B,kBAAC,EAAD,gBAQb,CAACnB,IAEJ,OACE,kBAACoB,EAAA,EAAD,CAAQC,SAAS,oBACf,kBAACC,EAAA,EAAD,MACA,kBAAC1C,EAAD,KAAcuB","file":"component---src-pages-work-js-0f5ada756982924379a8.js","sourcesContent":["// @flow\n\nimport React from 'react';\nimport { ThemeConsumer } from 'styled-components';\n\ntype Props = {\n  color: string\n};\n\nfunction LinkArrow(props: Props): React$Node {\n  return (\n    <ThemeConsumer>\n      {theme => (\n        <svg\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 16 16\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M8 0L6.59 1.41L12.17 7H0V9H12.17L6.59 14.59L8 16L16 8L8 0Z\"\n            fill={theme[props.color]}\n          />\n        </svg>\n      )}\n    </ThemeConsumer>\n  );\n}\n\nLinkArrow.defaultProps = {\n  color: 'darkText'\n};\n\nexport default React.memo(LinkArrow);","// @flow\n\nimport React from 'react';\nimport { graphql, Link } from 'gatsby'\nimport styled from 'styled-components';\nimport Layout from '../components/layout/Layout';\nimport HelmetMeta from '../components/layout/HelmetMeta';\nimport Row from '../components/layout/Row';\nimport LinkArrow from '../components/icons/LinkArrow';\nimport media from '../utils/media';\n\nconst linkBorderRadius: string = '25px';\nconst workListMargin: string = '18px';\n\nconst HistoryList = styled.ul`\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n\n  li {\n    margin-bottom: ${workListMargin};\n    max-width: 334px;\n    width: 100%;\n  }\n\n  .work-link {\n    display: inline-block;\n    width: 100%;\n  }\n\n  ${media.medium} {\n    justify-content: flex-start;\n\n    li {\n      margin-right: ${workListMargin};\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  border-radius: ${linkBorderRadius};\n  box-shadow: ${props => props.theme.shadow};\n  transition: transform 250ms ease-out;\n  will-change: transform;\n  width: 100%;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nconst Header = styled.div`\n  background-color: ${props => props.theme.darkText};\n  border-top-left-radius: ${linkBorderRadius};\n  border-top-right-radius: ${linkBorderRadius};\n  position: relative;\n  height: 289px;\n`;\n\nconst Letter = styled.p`\n  color: ${props => props.theme.gray5};\n  bottom: -59px;\n  font-size: 242px;\n  font-weight: 600;\n  left: 25px;\n  line-height: initial;\n  position: absolute;\n`;\n\nconst Footer = styled.div`\n  background-color: ${props => props.theme.white};\n  border-bottom-left-radius: ${linkBorderRadius};\n  border-bottom-right-radius: ${linkBorderRadius};\n  padding-bottom: 36px;\n  padding-left: 43px;\n  padding-right: 43px;\n  padding-top: 36px;\n`;\n\nconst LinkTitle = styled.h6`\n  font-size: 36px;\n  font-weight: 600;\n  padding-bottom: 14px;\n`;\n\nconst Description = styled.p`\n  color: ${props => props.theme.gray3};\n  font-size: 16px;\n`;\n\ntype PageData = {\n  node: {\n    id: string,\n    frontmatter: {\n      description: string,\n      path: string,\n      title: string\n    }\n  }\n};\n\ntype Props = {\n  data: {\n    allMarkdownRemark: {\n      edges: Array<PageData>\n    }\n  }\n};\n\nfunction Work(props: Props): React$Node {\n  const { edges } = props.data.allMarkdownRemark;\n  const navItems: Array<React$Node> = React.useMemo(() => {\n    return edges.map(item => {\n      const { frontmatter } = item.node;\n      const letter: string = frontmatter.title.substring(0, 1);\n\n      return (\n        <li key={item.node.id}>\n          <Link className=\"work-link\" to={frontmatter.path}>\n            <Wrapper>\n              <Header>\n                <Letter>{letter}</Letter>\n              </Header>\n              <Footer>\n                <LinkTitle>{frontmatter.title}</LinkTitle>\n                <Row justify=\"space-between\">\n                  <Description>{frontmatter.description}</Description>\n                  <LinkArrow />\n                </Row>\n              </Footer>\n            </Wrapper>\n          </Link>\n        </li>\n      );\n    });\n  }, [edges]);\n\n  return (\n    <Layout headline=\"You Better Werk!\">\n      <HelmetMeta />\n      <HistoryList>{navItems}</HistoryList>\n    </Layout>\n  );\n}\n\nexport const WorkQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___dateTo },\n      filter: { frontmatter: { group: { eq: \"work\" } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default React.memo(Work);\n"],"sourceRoot":""}