{"componentChunkName":"component---src-templates-work-place-js","path":"/work/bible-app-for-kids","result":{"data":{"markdownRemark":{"html":"<p>One of the most challenging and fun projects I've ever worked on was building the four games that are featured in the Bible App for Kids app. Never would I imagine that something I've made would have reached <strong>over 14 million</strong> downloads.</p>\n<h2>The Tech</h2>\n<p>First and foremost, I'm not a game developer which made this project very challenging for me. In game development (vs. building a regular product), everything is about squares that are a part of maps, which use Maths and Maths is hard. ðŸ˜œ</p>\n<p>When LifeChurch approached us (Oven Bits) to build this app, neither React Native, or Swift existed. Even if they did, to successfully make a game-like app, you need a framework that will keep graphics rendering at the forefront since games are massive on the CPU. Thus, we found an excellent tool called CocosJS, which allowed us to build a game using Javascript. It wasn't anything verbose, but it was what we needed, and it still proves successful for the product today.</p>\n<p>Of course, being Oven Bits, we forked the repo and made our adjustments to the platform to ensure we had the upper hand in using a tool that would allow us to handle some custom scripts.</p>\n<h2>The Games</h2>\n<p>If I can remember right, one game was identical to the Mario \"match a card\" that has always existed since the good ole' NES days. Another was a coloring book type game (think Paint or something similar). The third was a sticker game where you could build a scene using digital stickers of characters and animals (totally BEFORE the whole chat sticker thing happened). And the last one...huh...I don't remember? ðŸ¤” There was/is a fourth game, though.</p>\n<p>While building these games, I realized how easy the world of product development was. Never before did I have to understand the matrix and bounding boxes of elements while tracking the x/y position of someone touching and holding that touch on the device screen. ðŸ¤¯</p>\n<p>I mean, your average web/mobile app is 1. Render a page; 2. Fetch data; 3. Display data. Compare that to game development = <em>boring!</em> Lol.</p>\n<p>While building these games, I realized that I actually had to use Computer Science. That was probably the last time outside of a custom handmade chart here and there. Other than that, no CS required in a CS profession. Very ironic.</p>","frontmatter":{"dateFrom":"June 01, 2015","dateTo":"September 01, 2016","description":"Mobile App (iOS/Android)","link":"https://bibleappforkids.com/","path":"/work/bible-app-for-kids","title":"Bible App"}}},"pageContext":{}}}